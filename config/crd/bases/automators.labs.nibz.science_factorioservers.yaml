
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: factorioservers.automators.labs.nibz.science
spec:
  additionalPrinterColumns:
  - JSONPath: .status.port
    name: Port
    type: integer
  group: automators.labs.nibz.science
  names:
    kind: FactorioServer
    listKind: FactorioServerList
    plural: factorioservers
    shortNames:
    - fs
    singular: factorioserver
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: FactorioServer is the Schema for the factorioservers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FactorioServerSpec defines the desired state of FactorioServer
          properties:
            enableBackups:
              type: boolean
            foo:
              description: Foo is an example field of FactorioServer. Edit FactorioServer_types.go
                to remove/update
              type: string
          type: object
        status:
          description: FactorioServerStatus defines the observed state of FactorioServer
          properties:
            active:
              description: Active means users are connected and playing
              type: string
            online:
              description: Online mean's the server is set up and ready for work
              type: string
            port:
              description: Port is the port the server is listening on
              format: int32
              type: integer
          required:
          - active
          - online
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
